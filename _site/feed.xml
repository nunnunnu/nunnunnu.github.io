

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>히히</title>
  <subtitle>-</subtitle>
  <updated>2024-09-09T12:24:07+09:00</updated>
  <author>
    <name>jinny</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 jinny </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[김영한 스프링 MVC 1] 상품 도메인 개발</title>
    <link href="http://localhost:4000/posts/%EC%83%81%ED%92%88%EB%8F%84%EB%A9%94%EC%9D%B8%EA%B0%9C%EB%B0%9C/" rel="alternate" type="text/html" title="[김영한 스프링 MVC 1] 상품 도메인 개발" />
    <published>2023-08-05T00:00:00+09:00</published>
  
    <updated>2023-08-15T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%83%81%ED%92%88%EB%8F%84%EB%A9%94%EC%9D%B8%EA%B0%9C%EB%B0%9C/</id>
    <content src="http://localhost:4000/posts/%EC%83%81%ED%92%88%EB%8F%84%EB%A9%94%EC%9D%B8%EA%B0%9C%EB%B0%9C/" />
    <author>
      <name>jinny</name>
    </author>

  
    
    <category term="Spring" />
    
  

  <summary>entity
```java
package hello.itemservice.domain.item;


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class Item {
	private Long id;
	private String itemName;
	private Integer price;
	private Integer quantity;
}

- repository

```java
package hello.itemservice.domain.i...</summary>

  </entry>

  
  <entry>
    <title>[김영한 스프링 MVC 1] 스프링 MVC 구조</title>
    <link href="http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81_MVC_%EA%B5%AC%EC%A1%B0/" rel="alternate" type="text/html" title="[김영한 스프링 MVC 1] 스프링 MVC 구조" />
    <published>2023-06-25T00:00:00+09:00</published>
  
    <updated>2023-06-25T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81_MVC_%EA%B5%AC%EC%A1%B0/</id>
    <content src="http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81_MVC_%EA%B5%AC%EC%A1%B0/" />
    <author>
      <name>jinny</name>
    </author>

  
    
    <category term="Spring" />
    
  

  <summary>DispatcherServlet

DIspatcherServlet도 부모클래스가 HttpServlet을 상속받고있음. → 모든경로에대해 매핑을 해놓음

(자세한 경로가 우선순위가 높아서 기존에 등록한 서블릿도 동작함)

protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {
    HttpServletRequest processedRequest = request;
    HandlerExecutionChain mappedHandler = null;
    ModelAndView mv = null;
		// 1. 핸들러 조회
		mappedHandler = getHandler(...</summary>

  </entry>

  
  <entry>
    <title>[김영한 스프링 MVC 1] 스프링 MVC 기본기능</title>
    <link href="http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81MVC%EA%B8%B0%EB%B3%B8%EA%B8%B0%EB%8A%A5/" rel="alternate" type="text/html" title="[김영한 스프링 MVC 1] 스프링 MVC 기본기능" />
    <published>2023-06-25T00:00:00+09:00</published>
  
    <updated>2023-06-25T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81MVC%EA%B8%B0%EB%B3%B8%EA%B8%B0%EB%8A%A5/</id>
    <content src="http://localhost:4000/posts/%EC%8A%A4%ED%94%84%EB%A7%81MVC%EA%B8%B0%EB%B3%B8%EA%B8%B0%EB%8A%A5/" />
    <author>
      <name>jinny</name>
    </author>

  
    
    <category term="Spring" />
    
  

  <summary>기본적인 내용이 많아서 좀 생략함

  war : 톰캣 별도 설치(내장도되긴함), servlet, jsp에도 배포가능함
  jar : 내장톰캣 사용. 내장서버사용에 최적화됨


— 로깅
운영시스템에서는 sout안씀. SLF4J와 Logback 두 라이브러리가있는데 대부분 Logback사용함(스프링부트 기본제공)

package com.hello.springmvc1.basic;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@Res...</summary>

  </entry>

  
  <entry>
    <title>[김영한 스프링 MVC 1] MVC 프레임워크</title>
    <link href="http://localhost:4000/posts/MVC_%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/" rel="alternate" type="text/html" title="[김영한 스프링 MVC 1] MVC 프레임워크" />
    <published>2023-06-11T00:00:00+09:00</published>
  
    <updated>2023-06-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/MVC_%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <content src="http://localhost:4000/posts/MVC_%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/" />
    <author>
      <name>jinny</name>
    </author>

  
    
    <category term="Spring" />
    
  

  <summary>프론트 컨트롤러 도입

프론트 컨트롤러 서블릿 하나로 클라이언트의 요청을 받아 요청에맞는 컨트롤러를 호출(컨트롤러는 서블릿필요없음)

package com.mvc1.servlet.web.frontController.v1.controller;

import java.io.IOException;

import com.mvc1.servlet.web.frontController.v1.ControllerV1;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServlet...</summary>

  </entry>

  
  <entry>
    <title>[김영한 스프링 MVC 1] 서블릿, MVC, JSP</title>
    <link href="http://localhost:4000/posts/%EC%84%9C%EB%B8%94%EB%A6%BF_mvc_jsp/" rel="alternate" type="text/html" title="[김영한 스프링 MVC 1] 서블릿, MVC, JSP" />
    <published>2023-05-29T00:00:00+09:00</published>
  
    <updated>2023-05-29T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%84%9C%EB%B8%94%EB%A6%BF_mvc_jsp/</id>
    <content src="http://localhost:4000/posts/%EC%84%9C%EB%B8%94%EB%A6%BF_mvc_jsp/" />
    <author>
      <name>jinny</name>
    </author>

  
    
    <category term="Spring" />
    
  

  <summary>동시성 문제 고려안하고 진행(고려시 ConcurrentHashMap, AtomicLong사용을 고려해야함)

package com.mvc1.servlet.domain;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class Member {
    private Long id;
    private String username;
    private int age;
}


package com.mvc1.servlet.domain;

import java.util.ArrayList;
import jav...</summary>

  </entry>

</feed>



<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-07-28T15:55:25+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">테스트중</title><subtitle>An amazing website</subtitle><author><name>Jinny</name><email>nod15277@gmail.com</email></author><entry><title type="html">자바의 정석 강의 - 변수(Variable)</title><link href="http://localhost:4000/java/%EB%B3%80%EC%88%98(Variable)/" rel="alternate" type="text/html" title="자바의 정석 강의 - 변수(Variable)" /><published>2022-07-29T06:27:00+09:00</published><updated>2024-07-29T00:49:00+09:00</updated><id>http://localhost:4000/java/%EB%B3%80%EC%88%98(Variable)</id><content type="html" xml:base="http://localhost:4000/java/%EB%B3%80%EC%88%98(Variable)/"><![CDATA[<ul>
  <li>
    <p>system.out.println(); 에서 print==ln==이 \n이거라서 따로 \n안해줘도 지금까지 줄바꿈이 됐던거임..! 충격! pintf도 있다..!</p>

    <pre><code class="language-Java">  public class Ex2_1 {
    
  	public static void main(String[] args) {
  		System.out.printf("hello");
  		System.out.printf("hello");
  		System.out.printf("hello");
  	}
    
  }
</code></pre>

    <p>이거는 줄바꿈 안되고 hellohellohello로 실행됨. print로 바꿔도 마찬가지</p>
  </li>
</ul>

<hr />

<ul>
  <li>변수(variable) : 하나의 값을 저장할 수 있는 메모리 공간(RAM). 변경가능
  — 변수 선언 이유 : 값(data)를 저장할 수 있는 공간을 마련하기 위해.
      변수타입 변수이름; ex)int age;
    <ul>
      <li>=는 등호가 아니라 대입. 그래서 if문에서는 ==를 썼구나</li>
      <li>
        <p>변수의 초기화 : 변수에 처음으로 값을 저장하는 것.
  int x=0; 변수 x를 선언 후 0으로 초기화
  int y=5; 변수 y를 선언 후 5로 초기화</p>

        <p>❗ ==지역변수는 읽기전에 꼭 초기화를 해주어야 함==</p>
      </li>
      <li>변수 타입
        <ul>
          <li>기본형(Primitive type) - 8개
            <ul>
              <li>정수 :
                <ul>
                  <li>int</li>
                  <li>byte : 0~127, 이진데이터를 다루는데 사용</li>
                  <li>short : c언어와의 호환을 위해 사용. 잘안쓰임</li>
                  <li>long : int에 못넣는 20억이 넘는 값을 넣음</li>
                </ul>
              </li>
              <li>문자 : char (한글자) - 빈문자(’’;)불가능</li>
              <li>문자열 : String (여러글자) -
                <ul>
                  <li>
                    <p>빈문자(””;) 가능<br />
  ⇒ “”+7 = “7” : 숫자 7이 문자열로 변환됨.<br />
  ex) “”+7+7 = “7”+7→”7”+”7”⇒ “77”<br />
  7+7+”” = 14+””→”14”+””⇒”14”</p>
                  </li>
                  <li>
                    <p>class이나 너무 자주 쓰여서 String s1 = “ab”; 로 사용가능</p>
                  </li>
                </ul>
              </li>
              <li>실수 (소수점) : double, float</li>
              <li>논리(boolean) : true, false. 조선식과 논리적 계산에 사용</li>
            </ul>

            <table>
              <thead>
                <tr>
                  <th>종류/크기</th>
                  <th>1byte</th>
                  <th>2byte</th>
                  <th>4byte</th>
                  <th>8byte</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>논리형</td>
                  <td>boolean</td>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                </tr>
                <tr>
                  <td>문자형</td>
                  <td> </td>
                  <td>char</td>
                  <td> </td>
                  <td> </td>
                </tr>
                <tr>
                  <td>정수형</td>
                  <td>byte</td>
                  <td>short</td>
                  <td>==int==</td>
                  <td>long</td>
                </tr>
                <tr>
                  <td>실수형</td>
                  <td> </td>
                  <td> </td>
                  <td>float</td>
                  <td>==double==</td>
                </tr>
              </tbody>
            </table>

            <p>n비트로 표현할 수 있는 값의 개수 : 2의 n제곱</p>

            <p>n비트로 표현할 수 있는 부호없는 정수의 범위 : 0~2의n제곱-1</p>

            <p>n비트로 표현할 수 있는 부호있는 정수의 범위 : -2의 n-1제곱 ~2의 n-1제곱-1</p>

            <ul>
              <li>부호비트 (sign bit)
                <ul>
                  <li>
                    <p>byte = -2의 7제곱~ 2의 7제곱 -1 =</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>0</td>
                          <td>7bit</td>
                        </tr>
                      </tbody>
                    </table>

                    <p>부호비트가 0이니까 양수</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>1</td>
                          <td>7bit</td>
                        </tr>
                      </tbody>
                    </table>

                    <p>부호비트가 1이니까 음수</p>
                  </li>
                  <li>
                    <p>short = -2의 15제곱~ 2의 15제곱 -1 =</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>s</td>
                          <td>15bit</td>
                        </tr>
                      </tbody>
                    </table>
                  </li>
                  <li>
                    <p>char = 0~2의 16제곱 -1 (2진수로 변환)</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>16bit</td>
                        </tr>
                      </tbody>
                    </table>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>160000000001000001</td>
                        </tr>
                      </tbody>
                    </table>
                  </li>
                  <li>
                    <p>int = -2의 31제곱~ 2의 31제곱 -1 = -20억~20억</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>s</td>
                          <td>31bit</td>
                        </tr>
                      </tbody>
                    </table>
                  </li>
                  <li>
                    <p>int = -2의 63제곱~ 2의 63제곱 -1 = -800경 ~ 800경</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>s</td>
                          <td>63bit</td>
                        </tr>
                      </tbody>
                    </table>

                    <p>혹시 부족하면 Big integer사용</p>
                  </li>
                  <li>
                    <p>float = 1+8+23 = 32bit = 4byte = -1.4<em>10의 -45제곱~1.4</em>10의 -45제곱</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>S</td>
                          <td>E(8)</td>
                          <td>M(23)</td>
                        </tr>
                      </tbody>
                    </table>

                    <p>정밀도 : 7자리</p>
                  </li>
                  <li>
                    <p>double = 1+11+52 = 64bit = 8byte = -3.4<em>10의 38제곱~3.4</em>10의 38제곱</p>

                    <table>
                      <thead>
                        <tr>
                          <th> </th>
                          <th> </th>
                          <th> </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td>S</td>
                          <td>E(11)</td>
                          <td>M(50)</td>
                        </tr>
                      </tbody>
                    </table>

                    <p>정밀도 : 15자리 (float보다 정확함)</p>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>
            <p>참조형(Reference type) : 기본형을 제외한 나머지. 무한개</p>

            <ul>
              <li>메모리주소를 저장. (4byte[40억] or 8 byte[160억])</li>
            </ul>

            <p>ex) today = new Date(); - 참조형 변수 today에 객체의 주소를 저장</p>
          </li>
        </ul>
      </li>
      <li>리터럴 (literal) : 그 자체로 값을 의미. 기존의 상수.
        <ul>
          <li>
            <p>리터럴 타입과 접미사
  |종류|리터럴|접미사|
  |—|—|—|
  |논리형|false, true|없음|
  |정수형|int - 123, Ob0101, 077, 0xFF,  <br />Long - 100L|==L==|
  |실수형|3.14, 3.0e8, 1.4f, 0x1.0p-1|==f(float)==,  <br />d(double, 생략가능)|
  |문자형|’A’, ‘1’, ’\n’|없음|
  |문자열|“ABC”, “123”, “A”, “true”|없음|</p>

            <p>정수형, 실수형은 접미사로 구분함.</p>

            <pre><code class="language-Java">  int oct = 010;
  		int hex = 0x10;
            		
  		System.out.println(oct);
  		System.out.println(hex);
  // println을 쓰면 8진수와 16진수를 표현못해서 8과 16이 나옴.
  // printf를 쓰면 가능
</code></pre>

            <ul>
              <li>10진수 : int i = 100;</li>
              <li>8진수 : int i = 0100;</li>
              <li>16진수 : int i = 0x100;</li>
              <li>long i = 10_000_000_000L ⇒ 100억. int가 20억까지 가능함. 꼭 L붙일것.</li>
              <li>1e3 = 여기서 e가 10의 n제곱임. = 1000.0 (접미사 없으니 double형)</li>
              <li>int i = ‘A’; ⇒ A의 문자열코드인 65가 출력됨</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>상수(constant) : 한 번만 값을 저장 가능한 변수. 변경 불가능. 앞에 final을 붙이면 됨. (아래 파란형광펜)<br />
  ex) final int MAX = 100;<br />
  ==MAX = 200;(에러남)==
        <pre><code class="language-Java">  int score = 100;
  score = 200;
  final int MAX = 100;
  char ch = 'a';
  String str = "abc";
</code></pre>
        <p>— 변수와 리터럴 타입 불일치</p>
      </li>
    </ul>
  </li>
  <li>범위가 변수&gt;리터럴 인 경우 가능함
    <ul>
      <li>int &gt; char / long &gt; int / double &gt; float</li>
    </ul>
  </li>
  <li>범위가 변수 &lt; 리터럴 인 경우 에러남
    <ul>
      <li>long i = 3.14f - long&lt;float이라 에러</li>
      <li>float f = 3.14 (접미사 생략됐으니 double형) 에러. float &lt; double
  double d = 3.14f ⇒ 가능</li>
      <li>byte, short변수에 int 리터럴 사용 가능</li>
    </ul>
  </li>
</ul>

<hr />

<ul>
  <li>두 변수 값 교환하는 법</li>
</ul>

<pre><code class="language-Java">int x = 10, y = 20;
int tmp;//빈공간
x=tmp;
x=y;
y=tmp;
</code></pre>

<hr />
<p><strong>pritnln 단점</strong></p>
<ul>
  <li>출력형식 지정 불가 (ex.소수점 자리지정 불가)</li>
  <li>10진수로만 출력됨
⇒ printf를 사용하면 가능해짐</li>
</ul>

<table>
  <thead>
    <tr>
      <th>지시자</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>%b</td>
      <td>boolean 형식으로 출력</td>
    </tr>
    <tr>
      <td>%d</td>
      <td>10진 정수의 형식으로 출력</td>
    </tr>
    <tr>
      <td>%o</td>
      <td>8진 정수의 형식으로 출력  <br />#을 붙여야 접두사도 출력됨</td>
    </tr>
    <tr>
      <td>%x, %X</td>
      <td>16진 정수의 형식으로 출력  <br />#을 붙여야 접두사도 출력됨</td>
    </tr>
    <tr>
      <td>%f</td>
      <td>부동 소수점의 형식으로 출력  <br />%g를 사용하면 간략하게 출력</td>
    </tr>
    <tr>
      <td>%e, %E (1.234e+02)</td>
      <td>지수 표현식의 형식으로 출력</td>
    </tr>
    <tr>
      <td>%c</td>
      <td>문자로 출력</td>
    </tr>
    <tr>
      <td>%s</td>
      <td>문자열로 출력</td>
    </tr>
  </tbody>
</table>

<p>==❗\n, %n 둘다 줄바꿈이나 %n을 자주 사용할 것.==</p>

<ul>
  <li>지시자
  system.out.printf(”[%5d]%n”, 10); // [ 10] - 5자리 출력
  system.out.printf(”[%-5d]%n”, 10); // [10 ] - 5자리 출력, 왼쪽정렬
  system.out.printf(”[%05d]%n”, 10); // [00010] - 5자리 출력
  숫자, 문자열 다 됨
  system.out.printf(”[%5d]%n”, 1234567); // [1234567] - 7자리 출력
  System.out.printf(“[%14.10f]%n”, 1.23456789); // [ 1.2345678900] 
  전체자리 14자리에서 소수점 10자리 출력<br />
—
화면으로 입력받기부터 - Scanner : 화면으로부터 데이터를 입력받는 class
    <ol>
      <li>import문 필수 - import java.util.*;</li>
      <li>Scanner 객체의 생성
  Scanner scanner = new Scanner system.in;</li>
      <li>Scanner 객체의 사용</li>
    </ol>
    <ul>
      <li>int num = scanner.nextInt(); //화면에서 입력받은 정수를 num에 저장</li>
      <li>String input = scanner.nextLine(); //화면에서 입력받은 내용을 input에 저장<br />
  int num = Integer.parseInt(input); //문자열(input)을 숫자(num)으로 전환
        <ul>
          <li>숫자 → 문자열 = 숫자 + “”</li>
          <li>문자열 → 숫자 = Integer.parseInt(”문자열”)
  — 한 문장에 여러 값을 받을경우 필요함</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<pre><code class="language-Java">import java.util.*;

public class ScanfEx1 {

	public static void main(String[] args) {

		//정수
		Scanner scanner = new Scanner(System.in);
		int num = scanner.nextInt();
		System.out.println(num);
		
		//문자열
		Scanner scanner2 = new Scanner(System.in);
		String input = scanner2.nextLine();
		System.out.println(input);
		
		//문자열 -&gt; 숫자
		Scanner scanner3 = new Scanner(System.in);
		String input2 = scanner3.nextLine();
		int num2 = Integer.parseInt(input2);
		System.out.println(input2);
	}
}
</code></pre>

<p>❗Scanner밑에 밑줄은 입출력 관련 객체들은 원칙적으로 반드시 닫아주어야함. 하지만 화면입력같은경우에는 자바 버추얼머신에서 기본적으로 관리가 되기때문에 닫아주지 않아도 됨. 오류는 무시할 것.</p>

<hr />
<p>오버플로우 : 표현할 수 있는 범위를 넘어섰다.</p>

<p>최대값 + 1 = 최소값</p>

<p>최소값 - 1 = 최대값</p>

<p>10진수 :9999→0000 (칸이 4칸이라서)</p>

<p>부호없는 정수 : ex) 4bit (표현범위0~15)</p>

<p>15(최대값) + 1 → 0(최소값)</p>

<p>2진수 : 1111→0000</p>

<p>부호있는 정수 : ex) 4bit (표현범위-8~7)</p>

<p>7(최대값)+1 → -8(최소값)</p>

<p>부호 없는 정수 : 부호 +나-가 존재하지 않는 숫자 세계를 나타냄.(0이하의 음수를 표현x)
부호 있는 정수 : 양수</p>

<hr />
<p>==<strong>타입간의 변환 방법</strong>== - 외우지는 못해도 필요할때 찾아볼 수 있는 정도는 돼야함</p>

<ul>
  <li>문자 → 숫자 = 3 - ’0’</li>
  <li>숫자 → 문자 = 3 + ’0’</li>
  <li>문자→ 문자열 = ‘3’ + “”</li>
  <li>문자열 → 문자 = “3”.charAt(0)</li>
  <li>숫자 → 문자열 = 3 + ””</li>
  <li>문자열 → 숫자<br />
  = Integer.parseInt(”3”)<br />
  = Double.parseDouble(”3.4”)</li>
</ul>

<pre><code class="language-Java">import java.util.*;

public class ScanfEx1 {

	public static void main(String[] args) {
		String str = "3";
		System.out.println(str.charAt(0)); //문자열 -&gt; 문자
		System.out.println('3' - '0' + 1); //문자-&gt;숫자
		System.out.println(Integer.parseInt("3")+1); //문자열 -&gt; 숫자
		System.out.println("3"+1); //문자열+숫자 =&gt; 31
		System.out.println(3+'0'); //문자 0은 숫자로 48 =&gt; 51
		System.out.println((char)(3+'0')); // 문자 '3' 출력
	}
}
</code></pre>
<p>printf사용시 %#x는 접두사 0x가 붙음</p>]]></content><author><name>Jinny</name><email>nod15277@gmail.com</email></author><category term="java" /><category term="java" /><category term="backend" /><category term="자바의정석" /><summary type="html"><![CDATA[system.out.println(); 에서 print==ln==이 \n이거라서 따로 \n안해줘도 지금까지 줄바꿈이 됐던거임..! 충격! pintf도 있다..! public class Ex2_1 { public static void main(String[] args) { System.out.printf("hello"); System.out.printf("hello"); System.out.printf("hello"); } } 이거는 줄바꿈 안되고 hellohellohello로 실행됨. print로 바꿔도 마찬가지]]></summary></entry><entry><title type="html">자바의 정석 강의 - 자바 시작하기 전</title><link href="http://localhost:4000/java/%EC%9E%90%EB%B0%94-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84/" rel="alternate" type="text/html" title="자바의 정석 강의 - 자바 시작하기 전" /><published>2022-07-28T21:27:00+09:00</published><updated>2022-08-17T06:52:00+09:00</updated><id>http://localhost:4000/java/%EC%9E%90%EB%B0%94%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%20%EC%A0%84</id><content type="html" xml:base="http://localhost:4000/java/%EC%9E%90%EB%B0%94-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84/"><![CDATA[<ul>
  <li>자바 : 프로그래밍 언어. 컴퓨터 프로그램(애플리케이션)을 만드는데 사용<br />
  실행환경(JRE) + 개발도구(JDK) + 라이브러리(API)
    <ul>
      <li>
        <p>라이브러리 : 프로그램을 만드는데 필요한 기능들을 미리 만들어놓은 것.</p>

        <p>⇒ 쉽고 빠른 개발 가능</p>
      </li>
      <li>pc애플리케이션, 웹 애플리케이션, 모바일 애플리케이션(안드로이드), 빅 데이터, 게임(ex.마크), 과학, 소형기기 등 에 활용 가능</li>
      <li>모던 프로그래밍 언어(객체지향 + 함수형)</li>
      <li>특징
        <ul>
          <li>배우기쉬운 객체지향언어(프로그래밍언어+객체지향개념[c++,java,python])</li>
          <li>자동 메모리 관리</li>
          <li>멀티 쓰레드 지원 - 하나의 프로그램에서 동시에 여러작업 가능.</li>
          <li>풍부한 라이브러리로 쉽게 개발가능.</li>
          <li>운영체제에 독립적 - 수정없이 여러 운영체제에서 사용가능
            <ul>
              <li>자바 가상 머신(JVM) : 자바 프로그램이 실행되는 가상 컴퓨터(VM). 한번 작성하면, 어디서든(어떤 운영체제에서도) 실행 가능.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>java API문서 : java API가 제공하는 기능에 대한 상세한 정보를 제공(html)
  <a href="https://docs.oracle.com/javase/7/docs/api/index.html">https://docs.oracle.com/javase/7/docs/api/index.html</a></li>
  <li>
    <p>단축키</p>

    <ul>
      <li>ctrl + shift + L : 단축키 전체 목록</li>
      <li>alt + shift + A : 멀티컬럼 편집 - 커서가 +모양으로 바뀌는데 바꾸고 싶은 부분을 드래그해서 한번에 바꿈</li>
      <li>ctrl + i : 자동들여쓰기</li>
      <li>ctrl + shift + o : import java.util.~; 자동추가</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jinny</name><email>nod15277@gmail.com</email></author><category term="JAVA" /><category term="java" /><category term="backend" /><category term="자바의정석" /><summary type="html"><![CDATA[자바 : 프로그래밍 언어. 컴퓨터 프로그램(애플리케이션)을 만드는데 사용 실행환경(JRE) + 개발도구(JDK) + 라이브러리(API) 라이브러리 : 프로그램을 만드는데 필요한 기능들을 미리 만들어놓은 것. ⇒ 쉽고 빠른 개발 가능 pc애플리케이션, 웹 애플리케이션, 모바일 애플리케이션(안드로이드), 빅 데이터, 게임(ex.마크), 과학, 소형기기 등 에 활용 가능 모던 프로그래밍 언어(객체지향 + 함수형) 특징 배우기쉬운 객체지향언어(프로그래밍언어+객체지향개념[c++,java,python]) 자동 메모리 관리 멀티 쓰레드 지원 - 하나의 프로그램에서 동시에 여러작업 가능. 풍부한 라이브러리로 쉽게 개발가능. 운영체제에 독립적 - 수정없이 여러 운영체제에서 사용가능 자바 가상 머신(JVM) : 자바 프로그램이 실행되는 가상 컴퓨터(VM). 한번 작성하면, 어디서든(어떤 운영체제에서도) 실행 가능. java API문서 : java API가 제공하는 기능에 대한 상세한 정보를 제공(html) https://docs.oracle.com/javase/7/docs/api/index.html 단축키 ctrl + shift + L : 단축키 전체 목록 alt + shift + A : 멀티컬럼 편집 - 커서가 +모양으로 바뀌는데 바꾸고 싶은 부분을 드래그해서 한번에 바꿈 ctrl + i : 자동들여쓰기 ctrl + shift + o : import java.util.~; 자동추가]]></summary></entry></feed>
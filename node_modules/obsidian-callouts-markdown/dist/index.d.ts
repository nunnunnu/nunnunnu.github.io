import { FC } from 'react';
import { FunctionComponent } from 'react';
import { HTMLAttributes } from 'react';
import { default as React_2 } from 'react';
import { ReactNode } from 'react';
import { SVGProps } from 'react';

declare type CalloutComponentProps = {
    type: CalloutTypes;
    title?: string;
    options?: CustomCalloutOptions;
    children: ReactNode;
};

declare type CalloutConfig = {
    components?: CustomCalloutComponents;
    options?: CustomCalloutOptions;
} & HTMLAttributes<HTMLElement>;

declare type CalloutTypes = 'note' | 'abstract' | 'summary' | 'tldr' | 'info' | 'todo' | 'tip' | 'hint' | 'important' | 'success' | 'check' | 'done' | 'question' | 'help' | 'faq' | 'warning' | 'caution' | 'attention' | 'danger' | 'error' | 'bug' | 'example' | 'quote' | 'cite' | 'normal';

declare type CustomCalloutComponentProps = Omit<CalloutComponentProps, 'type'> & {
    type?: string;
};

declare type CustomCalloutComponents = {
    [key: string]: FC<CustomCalloutComponentProps>;
};

declare type CustomCalloutOptions = {
    [key: string]: {
        icon?: FunctionComponent<SVGProps<SVGSVGElement>>;
        color?: string;
        backgroundColor?: string;
    };
};

export declare const ObsidianCallout: React_2.FC<CalloutConfig>;

export { }
